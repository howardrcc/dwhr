% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dwhr.R
\name{addDimView}
\alias{addDimView}
\title{Voeg dimensie view (dimView) toe aan sterschema-object}
\usage{
addDimView(
  env,
  dim,
  name,
  data,
  levelNames,
  initLevel = 0,
  initParent = "",
  selectLevel = 0,
  selectLabel = levelNames[1],
  selectParent = NULL,
  state = "enabled",
  type = "bidir",
  selectMode = "single",
  useLevels = NULL,
  cntName = "cnt",
  itemName = "Naam",
  ignoreDims = NULL,
  leafOnly = FALSE,
  fixedMembers = FALSE,
  keepUnused = FALSE,
  na.rm = TRUE,
  orderBy = "name",
  selectableLevels = NULL,
  footerLevels = NA_integer_,
  presListType = "dropdown",
  returnPrepData = FALSE,
  selectedIds = NULL,
  ignoreParent = FALSE
)
}
\arguments{
\item{env}{sterschema-object, gemaakt met \code{\link{new.star}}}

\item{dim}{string, uniek id van deze dimView. Dit id moet corresponderen met de parameter \code{dim} in
\code{\link{getDimUI}}}

\item{name}{string, getoonde naam in UI als titel van de dimView}

\item{data}{data.frame, tabel met dimensie-data met de volgende regels:
\itemize{
  \item De eerste kolom is de sleutel van de dimensie. Deze sleutel wordt gebruikt om een join te leggen met een 
  kolom met \strong{dezelfde} naam in de feiten-tabel. Als voor het sterschema-object \code{env}  geldt dat \code{env$foreignKeyCheck == TRUE} 
  dan wordt een foreignkey-check uitgevoerd en als dit fouten oplevert worden de eerste 10 verschillende foute id's getoond.
  \item er *moet* een kolom zijn met de naam level1Label, Dit is de kolom met het laagste nivo aan details (meest geaggregeerd). Minder gegaggregeerde
  (hogere) nivo's krijgen corresponderende namen: level2Label, level3Label etc. Top level0Label wordt automatisch toegevoegd en hoort niet 
  in het data.frame te zitten.}}

\item{levelNames}{character, vector van level-namen beginnend met de naam van het top-level. Deze level-namen worden getoond in de UI (in het kruimel-pad
en als getoonde kolomnaam van de dimView).}

\item{initLevel}{integer, initieele nivo wat getoond wordt. initlevel moet aanwezig zijn in de dimensie-data in de vorm van een kolom met de naam: 
level<initLevel>Label' (behalve voor level 0). default 0.}

\item{initParent}{string, specifieke ouder van het initieele level wat getoont wordt. Ouder moet in data zitten. Als dit niet opgegeven wordt, wordt de eerste
ouder van het betreffende initLevel gebruikt. default ""}

\item{selectLevel}{integer, initieele selectie-nivo. Als leafOnly == TRUE worden selectLevel en selectableLevels op maxLevel gezet, anders is dit default gelijk 
aan 0 (geen selectie, of selectie van top level).}

\item{selectLabel}{string, intitieel geselecteerd label voor het level volgens selectLevel. Als selectLevel == 0 dan wordt deze waarde gezet op het label van het top-level
(levelNames[1]). Anders: selectLabel moet een geldige waarde zijn in de data voor het betreffende selectLevel.}

\item{state}{string, deze parameter met default 'enabled' bepaalt of de dimView een filterend effect op de feiten heeft of niet en of de dimView zichtbaar is of niet.
Mogelijk waarden zijn:
\itemize{
 \item enabled: dimView heeft filterend effect op de feiten en is zichtbaar.
 \item hidden: dimView niet zichtbaar, maar heeft nog steeds een filterend effect op de feiten.
 \item disabled: dimView heeft geen filterend effect en is niet zichtbaar.
}
verandering van state kan plaats vinden via \code{\link{dimChangeState}}.}

\item{type}{string, deze parameter met default 'bidir' bepaalt of dimView meetwaarden of afgeleide meetwaarden heeft of niet en of de dimView selecteerbaar is of niet. 
Mogeljke waarden zijn:
\itemize{
 \item bidir: dimView heeft meetwaarden en is selecteerbaar.
 \item input: dimView heeft geen meetwaarden maar is wel selecteerbaar.
 \item output: dimView heeft meetwaarden maar is niet selecteerbaar.
}}

\item{selectMode}{string, mogelijke waarden:
\itemize{
 \item none: dimView niet selecteerbaar.
 \item single: single select.
 \item multi: multiple select.
}}

\item{useLevels}{integer, bepaalt welke nivo's uit levelNames daadwerkelijk gebruikt worden in de dimView.}

\item{cntName}{string, getoonde column-header voor de standaard count meetwaarde.}

\item{itemName}{string, getoonde column-header voor dimView-member.}

\item{ignoreDims}{character, vector met dimView-namen die geen filterend of berekend effect mogen hebben op de geaggregeerde waarden van deze dimView.}

\item{leafOnly}{boolean, als TRUE heeft deze dimView alleen geaggregeerde waarden op het hoogste (meest gedetaileerde) nivo. Te gebruiken wanneer dimensie-members 
niet aggregeerbaar zijn. De footer wordt dan in de UI niet getoond.}

\item{fixedMembers}{boolean, als TRUE worden alle dimensie-members getoont in de UI ongeachtof feiten bestaan voor de members of niet. Correspondeert met een left-
outer join tussen dimensie en feiten-tabel.}

\item{keepUnused}{boolean, als TRUE: niet gebruikte records in data (geen facts) worden niet opgeschoond, default FALSE.}

\item{na.rm}{boolean, als TRUE worden NA values verwijderd voor het uitvoeren van de aggregatie-functie.}

\item{selectableLevels}{integer, bepaalt welke nivo's van de dimView selecteerbaar zijn, staat standaard op alle nivo's.}

\item{footerLevels}{integer, bepaalt welke nivo's een footer krijgen, staat standaard op alle nivo's.}

\item{presListType}{string, bepaalt de manier waarop de presentatielijst getoond wordt. Mogelijke waarden:
\itemize{
 \item dropdown: lijst wordt getoond via een dropdown box
 \item links: lijst wordt getoond via meerdere links 
}}

\item{ignoreParent}{boolean, als TRUE: members worden niet gefilterd naargelang het bovenliggende parent-level maar worden onafhankelijk van elkaar getoond.}
}
\value{
gewijzigd sterschema-object.
}
\description{
Deze functie koppelt dimensie-data aan de feiten-tabel gegeven een sterschema-object \code{env}. Een dimView-object
wordt toegevoegd aan de \code{env$dims} list. Een dimView is een combinatie van een dimensie-kolom (dimView-member) met geaggregeerde 
meetwaarden uit de feiten-tabel. Het dimView object kan meerdere nivo's hebben. Het maximum aantal nivo's is op dit moment
5. Na het toevoegen van een dimView-object aan het sterschema kunnen er meetwaarden (via \code{\link{addMeasure}}) en 
afgeleide meetwaarden (via \code{\link{addMeasureDerrived}}) toegevoegd worden.
}
\section{reactive values}{

De volgende reactive values zijn beschikbaar per dimView
\itemize{
   \item levelChange integer, wordt opgehoogd als gebruiker van level veranderd in de UI (door op + te klikken of door 
   via breadcrumb naar ander nivo te navigeren). Dit triggered een dimRefresh. 
   \item dimRefresh integer, het verhogen van deze waarde triggered een verversing van de presentaties die aan deze dimView 
   gekoppeld zijn.
   \item selectChange integer, wordt opgehoogd als gebruiker een item selecteerd in de presentatie, of als er programatisch een 
   selectie-wijziging doorgevoerd wordt via \code{\link{setSelection}}. Dit triggered een selectedIdsChange, en isFiltered wordt 
   bijgewerkt.
   \item selectedIdsChange integer, wordt opgehoogd als selectie-wijziging daadwerkelijk resulteert in andere geselecteerde id's. 
   Dit triggered een dimRefresh.
   \item visChange = 0,
   \item isFiltered = !(any(selectLevel == 0)),
   \item orderChange = 0,
   \item pageChange = 0,
   \item pageLengthChange = 0,
   \item presChange = 0,
   \item nameChange = 0,
   \item linksChange = 0,
   \item clickMeasureEvent 
}
}

