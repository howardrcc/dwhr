% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dwhr.R
\name{addPresentation}
\alias{addPresentation}
\title{Toevoegen van een presentatie aan een dimView object.}
\usage{
addPresentation(env, dim, uiId = dim, type, as, name = "",
  isDefault = FALSE, height = NULL, width = NULL, useLevels = NULL,
  navOpts = NULL, simpleOpts = NULL, dataTableOpts = NULL,
  highChartsOpts = NULL)
}
\arguments{
\item{env}{sterschema object, gecreeerd met \code{\link{new.star}}.}

\item{dim}{string, dimView id gecreeerd met \code{\link{addDimView}}.}

\item{uiId}{string, id in de UI dat gebruikt wordt om deze presentatie in af te beelden. Als leeg geld: uiId = dim. Bij meerdere presentaties
bij 1 uiId kan de presentatie gekozen worden via een dropdown lijst. Door een aparte uiId te gebruiken die afwijkt van dim kan dezelfde data via 2 presentaties tegelijkertijd
getoond worden op het scherm. Hoe de navigatie in dat geval moet verlopen kan via de parameter navOpts geregeld worden. Het uiId moet voorkomen in UI.R}

\item{type}{string, bepaalt het type presentatie. Geldige waarden zijn:
\itemize{
   \item dataTable: de presentatie is een datatable, precieze opties worden via parameter dataTableOpts vastgelegd
   \item highCharts: de presentatie is een highcharts chart, precieze opties worden via parameter highChartOpts vastgelegd
   \item radioButton: detail opties in simpleOpts
   \item selectInput: detail opties in simpleOpts
}}

\item{as}{string, naam van deze presentatie zoals getoond in de UI}

\item{name}{string, titel van presentatie in het geval deze op aparte positie op het scherm getoond wordt, dus als uiId <> dim}

\item{isDefault}{boolean, relevant als er op 1 positie op het scherm meerdere presentaties zijn. Als TRUE wordt deze presentatie dan als eerste getoond.}

\item{height}{integer, hoogte in pixels van presentatie}

\item{width}{integer, breedte in pixels van presentatie}

\item{useLevels, }{alleen relevant als uiId <> dim, bepaalt welke nivo's uit levelNames daadwerkelijk gebruikt worden in deze presentatie.}

\item{navOpts}{list, met de volgende mogelijke items:
\itemize{
    \item syncNav: boolean, als TRUE, synchroniseer navigatie tussen presentaties. Alleen relevant als uiId <> dim, dus als presentaties tegelijk op het scherm staan. default TRUE
    \item hideNoFilter: boolean, als TRUE, verberg de 'Verwijder Filter' link nadat gebruiker selectie heeft gemaakt. default FALSE
    \item hideAll: boolean, als TRUE, verberg het top nivo in het kruimelpad. default FALSE
    \item hideBreadCrumb: boolean, als TRUE: verberg het kruimelpad. default FALSE
    \item links: list, lijst met te tonen url's in de header van de presentatie.
}}

\item{simpleOpts}{list, relevant voor het type radioButton. De lijst moet in dat geval de volgende items hebben:
\itemize{
    \item inline: boolean, als TRUE worden radiobuttons op 1 regel getoond ipv onderelkaar.
}}

\item{dataTableOpts}{list, verplicht in het geval van een presentatie-type dataTable. De lijst moet in dat geval de volgende items hebben:
\itemize{
    \item measures: list, verlpicht, lijst met meetwaarden die in tabel opgenomen moeten worden. De list heeft het volgende format:
    \itemize{
        \item viewColumn: string, verplicht, identificatie van de kolom. Dit is de naam zoals meegegeven aan \code{\link{addMeasure}} of aan \code{\link{addMeasureDerrived}} of zoals die 
        in deze functies wordt afgeleid.
        \item colorBarColor1: string, optioneel, te gebruiken achtergrond kleur colorbar voor betreffende kolom. 
        \item colorBarColor2: string, optioneel, te gebruiken achtergrond kleur colorbar voor negatieve waarden. colorbarColor1 moet in dit geval ook gegeven zijn. colorbarColor1 wordt 
        dan gebruikt voor de positieve waarden van de kolom.
        \item format: string, te gebruiken format voor deze kolom. Zie \code{\link{addMeasure}} voor toegestane waarden.
        \item orderable: boolean, geeft aan of kolom te ordenen moet zijn via de UI. Is nog niet geimplementeerd.
        \item bgStyle: list, specificatie van de background style van deze viewColumn. List kent volgende waarden:
        \itemize{
            \item cuts: numeric, vector van waarden waar de kolomwaarde over verdeeld wordt.
            \item levels: numeric, vector van waarden waar de kolomwaarde mee overeen moet stemmen.  Of cuts wordt opgegven of levels, 1 van beiden. 
            \item values: character, vector met kleuren waar de kolomwaarde op afgebeeld wordt via ofwel cuts ofwel levels. In het geval van cuts moet de vector van kleuren 
            1 langer zijn dan de vector cuts. Bij gebruik van levels moet de vector van kleuren even lang zijn als de levels-vector.
            \item valueColumn: Normaal wordt de waarde uit de viewColumn zelf gehaald, de waarde kan echter ook uit een andere viewColumn komen.
        }
        \item fgStyle: list, specificatie van de foreground style van deze viewColumn. List heeft zelfde structuur als bij het bgStyle item.
        \item width: integer, breedte in pixels van deze kolom.
        \item fontWeight: string, mag zijn: normal of bold. default normal.
        \item align: string, bepaalt uitlijning in kolom: left, center of right. 
        \item cursor: string, te hanteren cursor voor deze kolom als muis over de kolom gaat.
        \item visible: boolean, als FALSE is kolom niet zichtbaar in UI. 
    }
    \item pageLength: integer, aantal regels per pagina in het geval van een langere lijst van dimView-members.
    \item pageLengthList: numeric, vector met pagina lengtes waaruit gebruiker kan kiezen.
    \item serverSideTable: boolean, Als TRUE wordt de data slechts gedeeltelijk geladen in client. Toe te passen voor (zeer) grote dimViews.
}}

\item{highChartOpts}{}
}
\value{
gewijzigd sterschema object.
}
\description{
presentaties zijn nodig om gegevens te tonen en om interactie mogelijk te maken met eindgebruiker.
}
