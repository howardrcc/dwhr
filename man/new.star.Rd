% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dwhr.R
\name{new.star}
\alias{new.star}
\title{Creeer nieuw sterschema-object}
\usage{
new.star(id, session, facts, caching = FALSE, foreignKeyCheck = TRUE)
}
\arguments{
\item{id}{string, Id voor dit sterschema-object.}

\item{session}{een shiny sessie object.}

\item{facts}{dataframe met aggregeerbare meetwaarden en foreign-keys naar dimView-dataframes}

\item{caching}{boolean, controleert de caching van geaggreerde meetwaarden. Te gebruiken bij grote feiten-tabellen. default FALSE}

\item{foreignKeyCheck}{boolean, bepaalt of er een foreignkey-check wordt uitgevoerd. default TRUE}
}
\value{
resultaat een sterschema-object van klasse 'star'. Resultaat is een environment met velden:
\itemize{
    \item{\code{factsFiltered()}}: reactive dataframe met gefilterde feiten uitgaande van de selecties in de dimensie views
    \item{dims}: een lijst met dimView objecten zoals die nu met de feiten verbonden zijn
    }  .
}
\description{
Maak een sterschema-object gebaseerd op een feiten-tabel. Aan het resulterende object kunnen dimensie views worden toegevoegd met
\code{\link{addDimView}}. \code{new.star()} moet uitgevoerd worden binnen een shiny-server sessie.
}
