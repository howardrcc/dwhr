% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dwhr.R
\name{addMeasure}
\alias{addMeasure}
\alias{addMeasureDerrived}
\alias{addSortColumn}
\alias{addTooltipColumn}
\alias{addTextColumn}
\alias{addRowGroupColumn}
\title{Toevoegen van meetwaarden of ander kolom-type aan dimView-object.}
\usage{
addMeasure(
  env,
  dim,
  factColumn,
  fun,
  as = factColumn,
  viewColumn = NULL,
  sort = NULL,
  format = "standard",
  formatColumn = NULL,
  levels = NULL
)

addMeasureDerrived(
  env,
  dim,
  userFunc,
  as,
  viewColumn = NULL,
  sort = NULL,
  processingOrder = NULL,
  format = "standard",
  formatColumn = NULL,
  levels = NULL
)

addSortColumn(env, dim, sortColumn, levels = NULL)

addTooltipColumn(env, dim, tooltipColumn, levels = NULL)

addTextColumn(env, dim, textColumn, as, viewColumn, sort = NULL, levels = NULL)

addRowGroupColumn(env, dim, rowGroupColumn, levels = NULL)
}
\arguments{
\item{env}{sterschema object, gecreeerd met \code{\link{new.star}}.}

\item{dim}{character, 1 of meerdere namen van dimViews, gecreeerd met \code{\link{addDimView}}.}

\item{factColumn}{character, naam van numeric kolom in feiten tabel.}

\item{fun}{character, te gebruiken aggregatie functie voor deze meetwaarde. mogelijk waarden:
\itemize{
  \item sum: sommeer de kolomwaarde uit de feiten tabel.
  \item min: minimum kolomwaarde uit de feiten.
  \item max: maximum.
  \item dcount: distinct count van de factColumn
  \item count: aantal feitenregels.
  \item median: mediaan van factColumn.
  \item mean: gemiddelde van factColumn.
  \item userFunc: naam van custom aggregate functie. Functie moet gedefineerd zijn in de calling environment en moet een scalar retourneren.
}}

\item{as}{character, getoonde naam van de meetwaarde in de UI.}

\item{viewColumn}{character, naam van de technische kolom zoals gebruikt in de dimView. Als dit niet door gebruiker opgegeven wordt, wordt er een naam gegenereerd. De generatie van 
de naam verloopt zo:
\itemize{
    \item addMeasure: viewColumn = fun + '_' + factColumn
    \item addMeasureDerrived: viewColumn = d[1..n] met n het aantal afgeleide meetwaarden in de volgorde zoals die aangemaakt zijn.
}}

\item{sort}{numeric, volgorde waarin de kolommen getoond wroden in de UI. (naar presentatie?)}

\item{format}{character, getoonde format in UI. Mogelijk waarden zijn:
\itemize{
  \item standard: waarde getoond as is.
  \item integer: afronding naar dichtsbijzijnde integer waarde.
  \item euro: afronding naar geheel getal met euro teken ervoor.
  \item euro2: idem maar dan afgerond op 2 decimalen.
  \item keuro: waarde wordt gedeeld door duizend en afgrond naar geheel getal. Euro teken wordt voor het resultaat geplaatst.
  \item perc: afronding naar geheel getal + %
  \item perc1: afronding op 1 decimaal + %
  \item perc2: afronding op 2 decimalen + %
  \item decimal1: waarde afgerond op 1 decimaal
  \item decimal2: waarde afgerond op 2 decimalen
  \item decimal3: waarde afgerond op 3 decimalen
}}

\item{levels}{numeric of list. bepaalt voor welke levels de meetwaarden getoond worden in de UI (addMeasure, addDerrivedMeasure and addText) of voor welke levels de kolommen actief 
zijn (addSortColumn, addTooltipColumn).
De nummers refereren aan de originele levels van de dimensie-data (voordat parameter \code{useLevels} in \code{addDimView} is toegepast).
Als aangeboden in de vorm van een list: per dim wordt een levels vector meegegeven.  bv \code{levels = {periode = c(0,1,2), diag = c(2)}}.}

\item{userFunc}{character, naam van gebruikers functie voor het implementeren van de een afgeleide meetwaarde. De functie moet de volgende eigenschappen hebben:
\itemize{
  \item userFunc moet gedefinieerd zijn in de calling environment van \code{\link{new.star}}.
  \item the functie heeft geen parameters.
  \item the parent environment bevat de volgende variabelen:
      \itemize{
        \item star: het sterchema object
        \item columnName: de naam van de dimView kolom die de functie moet opleveren.
        \item dim: id van de huidige dimView.
        \item df: de tot op dat moment berekende data.frame voor deze dimView. Normaal gesproken is dit de basis voor de berekening van de afgeleide meetwaarde.
        \item type: type van data.frame df: `footer` of `body`
        }
  \item de functie moet een vector retourneren met de lengte gelijk aan: \code{nrow(df)}.
}}

\item{processingOrder}{numeric, volgorde waarin de afgeleide meetwaarden berekend worden.}

\item{sortColumn}{string, naam van de kolom in de dimensie-data die gebruikt moet worden om de dimView-member te sorteren.
De sortColumn zelf is verborgen in de UI. Als een sortColumn gebruikt wordt, is de ordering via de UI uitgeschakeld.
Er kan een andere sortColumn gebruikt worden voor ieder level. Gebruik hiervoor de levels parameter. Als er meer dan 1 sortColumn gespecificeerd wordt
voor 1 level, wordt er een foutmelding gegenereerd.}

\item{tooltipColumn}{string, te gebruiken kolom uit de dimensie-data die als tooltip gehanteerd wordt voor de dimview-member.}

\item{textColumn}{string, extra textuele kolom voor dimview.}

\item{rowGroupColumn}{string, extra groeperings kolom voor dimView}
}
\value{
gewijzigd sterschema object.
}
\description{
Deze functies voegen meetwaarden, afgeleide meetwaarden of een ander type kolom zoals 
sort-column, tooltip-column text-column of grouping-column toe aan een bestaand dimView object
}
